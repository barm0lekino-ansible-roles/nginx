---
  - name: Gathering OS Family facts
    #setup: filter='ansible_os_family'
    setup: filter='ansible_os_family, ansible_default_ipv4'
    #setup: filter='*'
    tags: common

  - name: Install Nginx
    package:
      pkg: nginx
      state: present
      update_cache: yes
    tags: ["nginx"]

  - name: Delete default site conf
    file:
      state: absent
      path: "{{ item }}"
    with_items:
      - /etc/nginx/sites-enabled/default
      - /etc/nginx/conf.d/default
    tags: ["nginx"]

  - name: include Letsencrypt tasks
    include: le-cert.yml
    when: (letsencrypt_enabled == 1)
    tags: ["nginx", "ssl-cert"]

  - name: Update nginx main config from template
    template:
      src: "nginx.conf.j2" #"{{ templates_path }}/{{ item }}.conf.j2"
      dest: "/etc/nginx/nginx.conf"
      owner: www-data
      group: www-data
      mode: 0644
    notify: Reload nginx
    tags: nginx

  - name: Update nginx sites config from templates
    template:
      src: "{{ item }}.conf.j2" #"{{ templates_path }}/{{ item }}.conf.j2"
      dest: "/etc/nginx/conf.d/{{ item }}.conf"
      owner: www-data
      group: www-data
      mode: 0644
    with_items:
      - "{{ nginx_config_templates }}"
    notify: Reload nginx
    tags: nginx

  - name: Copy nginx configs
    copy:
      src: files/{{ item }}
      dest: /etc/nginx/conf.d/
    with_items:
      - "{{ nginx_configs }}"
    notify: Reload nginx
    tags: nginx

  - name: Copy basic auth file
    copy:
      src: ~/.htpasswd
      dest: /etc/nginx/
    notify: Reload nginx
    when: (auth_basic == 1)
    tags: nginx
